{"version":3,"sources":["actions/index.js","reducers/index.js","components/Welcome.js","components/Interaction.js","components/Result.js","components/Stats.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","dataset","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","result","numQuestions","prunedPoints","concat","toConsumableArray","points","leftPoints","filter","x","indices","includes","mode","Welcome","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStart","ranges","window","Module","Ranges","VectorInt","regex","i","_this$props$attribute","config","range","low","high","j","str","inputs","current","value","trim","test","alert","parseInt","push_back","maxPoints","selectCandidates","size","releasePoints","startAlgorithm","handleModeChange","event","changeMode","target","React","createRef","_this2","trs","map","_ref3","_ref4","disabled","react_default","a","createElement","key","className","placeholder","ref","checked","onChange","toggleMask","style","width","htmlFor","id","name","onClick","Component","connect","_ref5","dispatch","setCandidates","val","defineProperty","SIMPLEX","RANDOM","point2Array","point","arr","dim","push","get","Interaction","choose","idx","option","runner","currIndices","getCandidatesIndices","prunedIndices","prevIndices","getPrunedIndices","prunePoints","incrementQCount","isFinished","getResult","showResult","nextPair","setState","pair","smallerBetter","AlgorithmRunner","p","setLeftPoints","_loop","tds","tr","ths","setResult","restart","th","Stats","prunedTrs","slice","leftTrs","components_Welcome","components_Interaction","components_Stats","components_Result","onRuntimeInitialized","Dataset","store","createStore","rootReducer","render","es","components_App","document","getElementById","script","src","async","body","appendChild"],"mappings":"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","file":"static/js/main.24be3707.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const SET_RESULT = \"SET_RESULT\";\r\nexport const INCREMENT_QCOUNT = \"INCREMENT_QCOUNT\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (dataset, attributes) => ({\r\n  type: SET_DATASET,\r\n  dataset,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const setResult = result => ({\r\n  type: SET_RESULT,\r\n  result\r\n});\r\n\r\nexport const incrementQCount = () => ({\r\n  type: INCREMENT_QCOUNT\r\n});\r\n\r\nexport const prunePoints = (points, indices) => ({\r\n  type: PRUNE_POINTS,\r\n  points,\r\n  indices\r\n});\r\n\r\nexport const setLeftPoints = points => ({\r\n  type: SET_LEFT_POINTS,\r\n  points\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_RESULT,\r\n  INCREMENT_QCOUNT,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst dataset = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.dataset;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst result = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_RESULT:\r\n      return action.result;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst numQuestions = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return 0;\r\n    case INCREMENT_QCOUNT:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, step no., attributes]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      return [...action.points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, attributes...]\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return action.points;\r\n    case PRUNE_POINTS:\r\n      return state.filter(x => !action.indices.includes(x[0]));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  dataset,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  result,\r\n  numQuestions,\r\n  prunedPoints,\r\n  leftPoints,\r\n  mode\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n    const ranges = new window.Module.Ranges();\r\n    const mask = new window.Module.VectorInt();\r\n    const regex = /^\\d+$/;\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (regex.test(str)) range[j] = parseInt(str);\r\n          else {\r\n            alert(`${str} in ${attr} range is not an integer`);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      ranges.push_back(range);\r\n      mask.push_back(this.props.mask[attr]);\r\n    }\r\n    let maxPoints = 1000;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    if (str !== \"\" && regex.test(str)) maxPoints = parseInt(str);\r\n    if (maxPoints > 5000) {\r\n      alert(\"Maximum retrieved number is 5000, try a smaller Max No. of Cars\");\r\n      return;\r\n  }\r\n    const candidates = this.props.dataset.selectCandidates(\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.size() < 1000) {\r\n      window.Module.releasePoints(candidates);\r\n      alert(\"Not enough samples, try larger ranges\");\r\n      return;\r\n    }\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const trs = this.props.attributes.map(([attr, config]) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td className=\"align-middle\">{attr}</td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ width: \"100%\" }}>\r\n        <h1>Find Your Favorite!</h1>\r\n        <p className=\"lead text-muted\">\r\n          This is a demostration of an interactive system for finding your favorite car in a used car database.<br />\r\n          Enter your acceptable range for each attribute \r\n\t  (leave blank to use the default). <br />\r\n          You will be presented two cars each time and you need to choose the\r\n          one you favor more. <br />\r\n          Click the \"Start\" button to find your favorite car in the database!\r\n        </p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <form>\r\n          <div className=\"form-group row align-items-center\">\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label htmlFor=\"maxPoints\" className=\"col-4 col-form-label\">\r\n                  Max No. of Cars\r\n                </label>\r\n                <div className=\"col\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"maxPoints\"\r\n                    placeholder=\"1000\"\r\n                    ref={this.inputs.maxPoints}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label className=\"col-4 col-form-label\">Mode</label>\r\n                <div className=\"col text-left\">\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"simplex\"\r\n                      value=\"simplex\"\r\n                      checked={this.props.mode === \"simplex\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                      Simplex\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"random\"\r\n                      value=\"random\"\r\n                      checked={this.props.mode === \"random\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"random\">\r\n                      Random\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"8rem\" }}\r\n                onClick={this.handleStart}\r\n              >\r\n                Start\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, dataset, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  dataset,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setResult,\r\n  incrementQCount,\r\n  setLeftPoints,\r\n  prunePoints\r\n} from \"../actions\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\nfunction getPrunedIndices(prevIndices, currIndices) {\r\n  let prunedIndices = [];\r\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size(); ) {\r\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\r\n      prunedIndices.push(prevIndices.get(i));\r\n      ++i;\r\n    } else {\r\n      ++i;\r\n      ++j;\r\n    }\r\n  }\r\n  return prunedIndices;\r\n}\r\n\r\nfunction point2Array(point) {\r\n  let arr = [];\r\n  for (let i = 0; i < point.dim(); ++i) {\r\n    arr.push(point.get(i));\r\n  }\r\n  return arr;\r\n}\r\n\r\nclass Interaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      this.props.candidates,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    let leftPoints = [];\r\n    for (let i = 0; i < this.prevIndices.size(); ++i) {\r\n      const idx = this.prevIndices.get(i);\r\n      const point = this.props.candidates.get(idx);\r\n      const p = [idx, ...point2Array(point)];\r\n      leftPoints.push(p);\r\n    }\r\n    this.props.setLeftPoints(leftPoints);\r\n    this.state = {\r\n      pair: this.runner.nextPair()\r\n    };\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const prunedPoints = prunedIndices.map(idx => {\r\n      const point = this.props.candidates.get(idx);\r\n      return [idx, this.props.numQuestions + 1, ...point2Array(point)];\r\n    });\r\n    this.props.prunePoints(prunedPoints, prunedIndices);\r\n    this.prevIndices = currIndices;\r\n    this.props.incrementQCount();\r\n    if (this.runner.isFinished()) {\r\n      const result = point2Array(this.runner.getResult());\r\n      window.Module.releasePoints(this.props.candidates);\r\n      this.props.showResult(result);\r\n    } else {\r\n      const nextPair = this.runner.nextPair();\r\n      this.setState({\r\n        pair: nextPair\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let trs = [];\r\n    for (let i = 0; i < this.state.pair.size(); ++i) {\r\n      const point = this.state.pair.get(i);\r\n      let tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n      for (let j = 0; j < point.dim(); ++j) {\r\n        tds.push(<td key={this.attributes[j]}>{point.get(j)}</td>);\r\n      }\r\n      tds.push(\r\n        <td key=\"Choose button\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={() => this.choose(i)}\r\n          >\r\n            Choose\r\n          </button>\r\n        </td>\r\n      );\r\n      const tr = <tr key={i}>{tds}</tr>;\r\n      trs.push(tr);\r\n    }\r\n    let ths = [<th key=\"Option No.\">Option</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    ths.push(<th key=\"chooseButton\" />);\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-20\">\r\n          <h4>Q{this.props.numQuestions + 1}: Choose the Car You Favor More among the Following Options</h4>\r\n          <table className=\"table text-hover text-center\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{trs}</tbody>\r\n          </table>\r\n      \t<br / >\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n}) => ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: result => {\r\n    dispatch(setResult(result));\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  incrementQCount: () => {\r\n    dispatch(incrementQCount());\r\n  },\r\n  setLeftPoints: leftPoints => {\r\n    dispatch(setLeftPoints(leftPoints));\r\n  },\r\n  prunePoints: (points, indices) => {\r\n    dispatch(prunePoints(points, indices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Interaction);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\n\r\nfunction Result({ result, attributes, mask, numQuestions, restart }) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const tds = result.map((x, i) => <td key={i}>{x}</td>);\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <h4>\r\n\tThe Total No. of Questions Asked is {numQuestions}.  Your Favorite Car is</h4>\r\n        <table className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>{tds}</tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ result, attributes, mask, numQuestions }) => ({\r\n  result,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className=\"row\" >\r\n        <div className=\"col-md-20\">\r\n          <h4>The No. of Cars We Have Pruned: {this.props.prunedPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{prunedTrs}</tbody>\r\n          </table>\r\n        </div>\r\n\t<div>\r\n\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t</div>\r\n        <div className=\"col-md-20\">\r\n          <h4>The No. of Cars Left in the Database: {this.props.leftPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths.slice(1)}</tr>\r\n            </thead>\r\n            <tbody>{leftTrs}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n}) => ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport Stats from \"./Stats\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  if (activeComponent === \"Welcome\") {\r\n    return <Welcome />;\r\n  } else if (activeComponent === \"Interaction\") {\r\n    return (\r\n      <div>\r\n\t<br />\r\n\t<br />\r\n        <Interaction />\r\n        <Stats />\r\n      </div>\r\n    );\r\n  } else if (activeComponent === \"Result\") {\r\n    return <Result />;\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: function() {\r\n    const dataset = new window.Module.Dataset(\"car.txt\");\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { dataset, attributes, mask }\r\n      //, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}